$checkbox-transition: 0.22s cubic-bezier(0, 0, 0.2, 1) 0ms;
$option-focus-transition: 0.22s cubic-bezier(0, 0, 0.2, 1);

.checkbox {
  display: inline-flex;
  vertical-align: middle;
  align-items: center;

  &__native {
    width: 1px;
    height: 1px;
  }

  &__bg {
    top: 25%;
    left: 25%;
    width: 50%;
    height: 50%;
    border: 1px solid currentColor;
    border-radius: $generic-border-radius;
    transition: background $checkbox-transition;
  }

  &__svg {
    color: map-get($theme-colors, "white");
    width: 80%;
    height: 80%;
    top: 10% !important;
    left: 10% !important;
  }

  &__truthy {
    stroke: currentColor;
    stroke-width: 3.12px;
    stroke-dashoffset: 29.78334;
    stroke-dasharray: 29.78334;
  }

  &__indet {
    fill: currentColor;
    transform-origin: 50% 50%;
    transform: rotate(-280deg) scale(0);
  }

  &__inner {
    width: 38px;
    height: 38px;
    outline: 0;
    border-radius: 100%;
    color: map-get($theme-colors, "text-primary");

    &--sm {
      width: 30px;
      height: 30px;
      margin-left: -7px;
    }

    &--truthy,
    &--indet {
      color: map-get($theme-colors, "primary");
      .checkbox__bg {
        background: map-get($theme-colors, "primary");
        border-color: map-get($theme-colors, "primary");
      }
    }

    &--truthy {
      path {
        stroke-dashoffset: 0;
        transition: stroke-dashoffset 0.18s cubic-bezier(0.4, 0, 0.6, 1) 0ms;
      }
    }

    &--indet {
      .checkbox__indet {
        transform: rotate(0) scale(1);
        transition: transform $checkbox-transition;
      }
    }
  }

  &.disabled {
    .checkbox__inner--truthy {
      .checkbox__bg {
        background: map-get($theme-colors, "disabled");
        border-color: map-get($theme-colors, "disabled");
      }
    }

    .checkbox__inner--falsy {
      .checkbox__bg {
        color: map-get($theme-colors, "disabled");
      }
    }
  }

  &--with-bottom {
    margin-bottom: 20px;
  }
}

@include media-lg() {
  .checkbox:not(.disabled):not(.checkbox--readonly) {
    cursor: pointer;

    .checkbox__inner::before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: 50%;
      background: currentColor;
      opacity: 0.12;
      transform: scale3d(0, 0, 1);
      transition: transform $option-focus-transition;
    }

    &:focus,
    &:hover {
      .checkbox__inner::before {
        transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
      }
    }
  }
}
